<div class="accordeon_header_position">
      <div class="accordeon_header">
          <h1>{{ section.settings.faq_headline }}</h1>
      </div>
    </div>  
    <div class="accordeon_block_position">
    	<div class="accordeon_block">
          <div class="first_accord">
            {% for block in section.blocks %}
            	{% if block.type == 'l_faq_column' %}
          	<div class="accordion js-accordion">
              <div class="accordion__item js-accordion-item">
                <div class="accordion-header js-accordion-header">{{ block.settings.questionText }}</div> 
              	<div class="accordion-body js-accordion-body">
                  <div class="accordion-body__contents">
					{{ block.settings.answerText}}
                  </div>
                </div>
              </div><!-- end of accordion body -->
            </div><!-- end of accordion item --> 
            	{% endif %}
            {% endfor %}
          </div>
          <div class="second_accord">
            {% for block in section.blocks %}
            	{% if block.type == 'r_faq_column' %}
            <div class="accordion js-accordion">
              <div class="accordion__item js-accordion-item">
                <div class="accordion-header js-accordion-header">{{ block.settings.questionText }}</div> 
              	<div class="accordion-body js-accordion-body">
                  <div class="accordion-body__contents">
					{{ block.settings.answerText}}
                  </div>
                </div>
                </div><!-- end of accordion body -->
            </div><!-- end of accordion item -->
            	{% endif %}
            {% endfor %}
          </div>  
      	</div>
    </div>
{% schema %}
  {
    "name": "FAQ Block",
    "max_blocks": 10,
    "settings": [
		{
			"type": "text",
			"id": "faq_headline",
			"default": "Default Text",
			"label": "Enter FAQ block headline"
		}
	],
    "blocks": [
        {
		  "type": "l_faq_column",
          "name": "Left FAQ column",
          "settings": [
            {
              "id": "questionText",
			  "type": "text",
			  "label": "Enter the question",
			  "default": "Default text"
            },
			{
			  "id": "answerText",
			  "type": "textarea",
			  "label": "Enter the answer",
			  "default": "Default text"
			}
          ]
        },
		{
		  "type": "r_faq_column",
          "name": "Right FAQ column",
          "settings": [
            {
              "id": "questionText",
			  "type": "text",
			  "label": "Enter the question",
			  "default": "Default text"
            },
			{
			  "id": "answerText",
			  "type": "textarea",
			  "label": "Enter the answer",
			  "default": "Default text"
			}
          ]
        }
      ]
  }
{% endschema %}

{% stylesheet %}

{% endstylesheet %}

{% javascript %}
{% endjavascript %}
<style>
  		.accordeon_header_position{
        	display: flex;
          	justify-content: center;
          	width: 100%;
          	margin: 80px 0;
        }
        .accordeon_header{
          display: flex;
          justify-content: flex-start;
          width: 80%;
        }
        .accordeon_header h1{
          font-family: FreightDispProBook-Regular;
          font-size: 72px;
          font-weight: 100;
          font-style: normal;
          font-stretch: normal;
          line-height: normal;
          letter-spacing: normal;
          color: #000000;
          text-transform: none;
        }
        .accordeon_block_position{
        	display: flex;
          	flex-direction: row;
          	justify-content: center;
          	width:100%;
          	margin-bottom: 80px;
        } 
        .accordeon_block{
        	display: flex;
          	flex-direction: row;
          	justify-content: space-between;
          	width: 80%;
        }
        .first_accord{
        	width: 45%;
        }
        .second_accord{
        	width: 45%;
        }
        .accordion {
          font-size: 1rem;
          width: 100%;
          margin: 0 auto;
          border-radius: 5px;
        }

        .accordion-header,
        .accordion-body {
          background: white;
        }

        .accordion-header {
          border-top: 1.5px solid #efefef;
          padding: 1.5em 1.5em 1.5em 0;
          cursor: pointer;
          transition: all .3s;
          font-family: Gotham;
          font-size: 20px;
          font-weight: bold;
          font-style: normal;
          font-stretch: normal;
          line-height: normal;
          letter-spacing: normal;
          color: #000000;
        }

        .accordion-header:hover {
          position: relative;
          z-index: 5;
        }

        .accordion-body {
          color: #3f3c3c;
          display: none;
        }

        .accordion-body__contents {
          padding: 0 1em 2em 1em;
          font-family: Gotham;
          font-size: 16px;
          font-weight: 100;
          font-style: normal;
          font-stretch: normal;
          line-height: 1.5;
          letter-spacing: normal;
          color: #555555;
        }

        .accordion__item.active:last-child .accordion-header {
          border-radius: none;
        }

        .accordion:first-child > .accordion__item > .accordion-header {
          border-bottom: 1px solid transparent;
        }

        .accordion__item > .accordion-header:after {
          content: "\f3d0";
          font-weight: 100;
          font-family: IonIcons;
          font-size: 1.2em;
          float: right;
          position: relative;
          top: -2px;
          transition: .3s all;
          transform: rotate(0deg); 
        }

        .accordion__item.active > .accordion-header:after {
          transform: rotate(-180deg);
        }

        .accordion__item.active .accordion-header {

        }

        .accordion__item .accordion__item .accordion-header {
          color: black;
        }

        @media screen and (max-width: 1000px) {
          body {
            padding: 1em;
          }

          .accordion {
            width: 100%;
          }
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        .ingred_btn{
        	cursor: pointer !important;
        }
        .pop_up_bg{
        	display: none;
          	flex-direction: row;
          	justify-content: center;
          	align-items: center;
          	width: 100vw;
          	height: 100vh;
          	position: fixed;
          	background-color: rgba(34, 34, 34, 0.72);
            top: 0;
          	left: 0;
            z-index: 100;
        }
        .pop_up_block{
        	width: 62%;
          	background-color: #FFF;
        }
        .close_popup{
        	width: 100%;
          	display: flex;
          	flex-direction: row;
          	justify-content: flex-end;
        }
        .close_popup img{
        	margin: 20px 20px 36px 0px;
          	cursor: pointer !important;
        }
        .pop_up_text{
        	font-family: Gotham;
  			font-size: 16px;
  			font-weight: 100;
  			font-style: normal;
  			font-stretch: normal;
  			line-height: 1.5;
  			letter-spacing: normal;
  			color: #000000;
          	padding: 0 80px 80px 80px;
        }
        @media screen and (max-width: 1024px){
        	.pop_up_block{
        		width: 75%;
        	}	
        }
        @media screen and (max-width: 768px){
        	.pop_up_block{
        		width: 85%;
        	}
          .accordeon_block{
          		flex-direction: column;
              	justify-content: flex-start;
              	align-items: center;
              	width: 90%;
          	}
            .first_accord, .second_accord {
                width: 100%;
            }
          .accordion-header{
          	font-size: 20px;
          }
          .accordeon_block_position{
          	margin-bottom:0;
          }
        }
        @media screen and (max-width: 500px){
        	.pop_up_block{
        		width: 100%;
        	}
            .pop_up_text{
              	font-family: Gotham;
                font-size: 16px;
                font-weight: normal;
                font-style: normal;
                font-stretch: normal;
                line-height: 1.5;
                letter-spacing: normal;
                color: #000000;
              	padding: 0 40px 64px 40px;
          	}
          	.accordeon_header_position{
              margin: 28px 0;
            }
            .accordeon_header h1{
              font-size: 40px;
            }
          	.accordeon_block{
          		flex-direction: column;
              	justify-content: flex-start;
              	align-items: center;
              	width: 90%;
          	}
            .first_accord, .second_accord {
                width: 100%;
            }
          .accordion-header{
          	font-size: 16px;
          }
          .accordeon_block_position{
          	margin-bottom:0;
          }
          .pop_up_text{
        	font-family: Gotham;
  			font-size: 14px;
  			font-weight: 100;
  			font-style: normal;
  			font-stretch: normal;
  			line-height: 1.5;
  			letter-spacing: normal;
  			color: #000000;
          	padding: 0 20px 20px 20px;
        }
    }
</style> 
<script>
        var accordion = (function(){
  
          var $accordion = $('.js-accordion');
          var $accordion_header = $accordion.find('.js-accordion-header');
          var $accordion_item = $('.js-accordion-item');

          // default settings 
          var settings = {
            // animation speed
            speed: 400,

            // close all other accordion items if true
            oneOpen: false
          };

          return {
            // pass configurable object literal
            init: function($settings) {
              $accordion_header.on('click', function() {
                accordion.toggle($(this));
              });

              $.extend(settings, $settings); 

              // ensure only one accordion is active if oneOpen is true
              if(settings.oneOpen && $('.js-accordion-item.active').length > 1) {
                $('.js-accordion-item.active:not(:first)').removeClass('active');
              }

              // reveal the active accordion bodies
              $('.js-accordion-item.active').find('> .js-accordion-body').show();
            },
            toggle: function($this) {

              if(settings.oneOpen && $this[0] != $this.closest('.js-accordion').find('> .js-accordion-item.active > .js-accordion-header')[0]) {
                $this.closest('.js-accordion')
                       .find('> .js-accordion-item') 
                       .removeClass('active')
                       .find('.js-accordion-body')
                       .slideUp()
              }

              // show/hide the clicked accordion item
              $this.closest('.js-accordion-item').toggleClass('active');
              $this.next().stop().slideToggle(settings.speed);
            }
          }
        })();

        $(document).ready(function(){
          accordion.init({ speed: 300, oneOpen: true });
        });
</script>
<script>
         // собираем все якоря; устанавливаем время анимации и количество кадров
        const anchors = [].slice.call(document.querySelectorAll('a[href*="#"]')),
              animationTime = 800,
              framesCount = 20;

        anchors.forEach(function(item) {
              // каждому якорю присваиваем обработчик события
              item.addEventListener('click', function(e) {
              // убираем стандартное поведение
              e.preventDefault();

              // для каждого якоря берем соответствующий ему элемент и определяем его координату Y
              let coordY = document.querySelector(item.getAttribute('href')).getBoundingClientRect().top;

              // запускаем интервал, в котором
              let scroller = setInterval(function() {
              // считаем на сколько скроллить за 1 такт
              let scrollBy = coordY / framesCount;

              // если к-во пикселей для скролла за 1 такт больше расстояния до элемента
              // и дно страницы не достигнуто
              if(scrollBy > window.pageYOffset - coordY && window.innerHeight + window.pageYOffset < document.body.offsetHeight) {
                // то скроллим на к-во пикселей, которое соответствует одному такту
                window.scrollBy(0, scrollBy);
              } else {
                // иначе добираемся до элемента и выходим из интервала
                window.scrollTo(0, coordY);
                clearInterval(scroller);
              }
            // время интервала равняется частному от времени анимации и к-ва кадров
            }, animationTime / framesCount);
          });
        });
</script>  
<script>
        document.addEventListener("DOMContentLoaded", function() { initialiseMediaPlayer(); }, false);
        var mediaPlayer;
        function initialiseMediaPlayer() {
           mediaPlayer = document.getElementById('media-video');
           mediaPlayer.controls = false;
        }
		function togglePlayPause() {
           var btn = document.getElementById('play-pause-button');
           if (mediaPlayer.paused || mediaPlayer.ended) {
              btn.title = 'pause';
              btn.className = 'pause';
              mediaPlayer.play();
           }
           else {
              btn.title = 'play';
              btn.className = 'play';
              mediaPlayer.pause();
           }
		}
</script>